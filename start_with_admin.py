#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–õ–∞—É–Ω—á–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import os
import sys
import time
import signal
import subprocess
import threading
from pathlib import Path

class VetBotLauncher:
    def __init__(self):
        self.processes = []
        self.running = True
        
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        try:
            process = subprocess.Popen([
                sys.executable, 'enhanced_bot.py'
            ], cwd=Path(__file__).parent)
            self.processes.append(('bot', process))
            print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            return process
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            return None
    
    def start_webapp(self):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        print("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        try:
            process = subprocess.Popen([
                sys.executable, 'webapp_server.py'
            ], cwd=Path(__file__).parent)
            self.processes.append(('webapp', process))
            print("‚úÖ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 5000")
            return process
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
            return None
    
    def start_admin_panel(self):
        """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–∞ Streamlit"""
        print("üë®‚Äçüíº –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–∞ Streamlit...")
        try:
            process = subprocess.Popen([
                sys.executable, '-m', 'streamlit', 'run', 'admin_streamlit.py',
                '--server.port=8501',
                '--server.address=0.0.0.0',
                '--browser.gatherUsageStats=false'
            ], cwd=Path(__file__).parent)
            self.processes.append(('admin', process))
            print("‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8501")
            return process
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
            return None
    
    def monitor_processes(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"""
        while self.running:
            time.sleep(5)
            
            for i, (name, process) in enumerate(self.processes):
                if process.poll() is not None:  # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
                    print(f"‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å {name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                    
                    if name == 'bot':
                        new_process = self.start_bot()
                    elif name == 'webapp':
                        new_process = self.start_webapp()
                    elif name == 'admin':
                        new_process = self.start_admin_panel()
                    
                    if new_process:
                        self.processes[i] = (name, new_process)
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...")
        self.running = False
        
        for name, process in self.processes:
            print(f"üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {name}...")
            try:
                process.terminate()
                process.wait(timeout=10)
                print(f"‚úÖ {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except subprocess.TimeoutExpired:
                print(f"‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º {name}...")
                process.kill()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ {name}: {e}")
        
        print("üëã –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(0)
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞"""
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self.signal_handler)
        signal.signal(signal.SIGTERM, self.signal_handler)
        
        print("""
üöÄ –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞ - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫
=====================================
        """)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        bot_process = self.start_bot()
        webapp_process = self.start_webapp()
        admin_process = self.start_admin_panel()
        
        if not any([bot_process, webapp_process, admin_process]):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞")
            return
        
        print("""
‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!

üì± Telegram –±–æ—Ç: –ê–∫—Ç–∏–≤–µ–Ω
üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:5000
üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:8501

–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C
        """)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        monitor_thread = threading.Thread(target=self.monitor_processes)
        monitor_thread.daemon = True
        monitor_thread.start()
        
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        try:
            while self.running:
                time.sleep(1)
        except KeyboardInterrupt:
            self.signal_handler(signal.SIGINT, None)

if __name__ == '__main__':
    launcher = VetBotLauncher()
    launcher.run()

