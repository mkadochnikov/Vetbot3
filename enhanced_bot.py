#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è –≤—ã–∑–æ–≤–∞ –≤—Ä–∞—á–∞
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∏—è (–ª–µ—á–µ–Ω–∏–µ –∫–æ—à–µ–∫)
"""

import os
import json
import logging
import sqlite3
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
WEBAPP_URL = os.getenv('WEBAPP_URL', 'https://your-webapp-url.com')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')
VET_SERVICE_PHONE = os.getenv('VET_SERVICE_PHONE', '+7-999-123-45-67')

class VetBotDatabase:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self, db_path='vetbot.db'):
        self.db_path = db_path
        self.init_database()
    
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                user_id INTEGER PRIMARY KEY,
                username TEXT,
                first_name TEXT,
                last_name TEXT,
                phone TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–∑–æ–≤ –≤—Ä–∞—á–∞
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS vet_calls (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                name TEXT,
                phone TEXT,
                address TEXT,
                pet_type TEXT,
                pet_name TEXT,
                pet_age TEXT,
                problem TEXT,
                urgency TEXT,
                preferred_time TEXT,
                comments TEXT,
                status TEXT DEFAULT 'pending',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (user_id)
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS consultations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                question TEXT,
                response TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (user_id)
            )
        ''')
        
        conn.commit()
        conn.close()
    
    def save_user(self, user_data):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            INSERT OR REPLACE INTO users (user_id, username, first_name, last_name)
            VALUES (?, ?, ?, ?)
        ''', (user_data['id'], user_data.get('username'), 
              user_data.get('first_name'), user_data.get('last_name')))
        
        conn.commit()
        conn.close()
    
    def save_vet_call(self, call_data):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–∑–æ–≤ –≤—Ä–∞—á–∞"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            INSERT INTO vet_calls 
            (user_id, name, phone, address, pet_type, pet_name, pet_age, 
             problem, urgency, preferred_time, comments)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            call_data.get('user_id'),
            call_data.get('name'),
            call_data.get('phone'),
            call_data.get('address'),
            call_data.get('petType'),
            call_data.get('petName'),
            call_data.get('petAge'),
            call_data.get('problem'),
            call_data.get('urgency', 'normal'),
            call_data.get('preferredTime'),
            call_data.get('comments')
        ))
        
        call_id = cursor.lastrowid
        conn.commit()
        conn.close()
        
        return call_id
    
    def get_user_calls(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT * FROM vet_calls 
            WHERE user_id = ? 
            ORDER BY created_at DESC
        ''', (user_id,))
        
        calls = cursor.fetchall()
        conn.close()
        
        return calls

class ProfessionalVetBot:
    """–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥"""
    
    def __init__(self):
        self.application = Application.builder().token(BOT_TOKEN).build()
        self.db = VetBotDatabase()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("webapp", self.webapp_command))
        self.application.add_handler(CommandHandler("my_calls", self.my_calls_command))
        self.application.add_handler(CommandHandler("contact", self.contact_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤
        self.application.add_handler(CallbackQueryHandler(self.button_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, self.web_app_data))
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        self.db.save_user(user.to_dict())
        
        keyboard = [
            [InlineKeyboardButton("ü©∫ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞", callback_data='consultation')],
            [InlineKeyboardButton("üì± –í—ã–∑–≤–∞—Ç—å –≤—Ä–∞—á–∞", web_app=WebAppInfo(url=WEBAPP_URL))],
            [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data='my_calls')],
            [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data='contact')],
            [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='help')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        welcome_text = f"""
üêæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!

–Ø –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥ —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–∫–∞–º–∏.

–ú–æ–∏ —É—Å–ª—É–≥–∏:
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∫–æ—à–µ–∫
‚Ä¢ –í—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞ –Ω–∞ –¥–æ–º –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫–æ—à–µ–∫
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É:
        """
        
        await update.message.reply_text(welcome_text, reply_markup=reply_markup)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = f"""
üÜò –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–º-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–æ–º:

üìã –ö–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/webapp - –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –≤—ã–∑–æ–≤–∞ –≤—Ä–∞—á–∞
/my_calls - –ú–æ–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–∑–æ–≤ –≤—Ä–∞—á–∞
/contact - –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

ü©∫ –ú–æ–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫–æ—à–µ–∫ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥
‚Ä¢ –õ–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∏ –ø–∞—Ä–∞–∑–∏—Ç–∞—Ä–Ω—ã—Ö –±–æ–ª–µ–∑–Ω–µ–π
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —É—Ö–æ–¥—É –∑–∞ –∫–æ—à–∫–∞–º–∏
‚Ä¢ –í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–º–æ—Ç—Ä—ã
‚Ä¢ –ü–æ–º–æ—â—å –∫–æ—Ç—è—Ç–∞–º –∏ –ø–æ–∂–∏–ª—ã–º –∫–æ—à–∫–∞–º

‚ö†Ô∏è –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏:
–ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—à–∫–∏ –∑–≤–æ–Ω–∏—Ç–µ: {VET_SERVICE_PHONE}

–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã: 15 –ª–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ –∫–æ—à–∫–∞—Ö
        """
        await update.message.reply_text(help_text)
    
    async def webapp_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        keyboard = [[InlineKeyboardButton("üì± –í—ã–∑–≤–∞—Ç—å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞ –Ω–∞ –¥–æ–º:",
            reply_markup=reply_markup
        )
    
    async def my_calls_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = update.effective_user.id
        calls = self.db.get_user_calls(user_id)
        
        if not calls:
            await update.message.reply_text("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞.")
            return
        
        response = "üìã –í–∞—à–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞:\n\n"
        
        for call in calls[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞—è–≤–æ–∫
            call_id, user_id, name, phone, address, pet_type, pet_name, pet_age, problem, urgency, preferred_time, comments, status, created_at = call
            
            status_emoji = {
                'pending': '‚è≥',
                'confirmed': '‚úÖ',
                'in_progress': 'üöó',
                'completed': '‚úÖ',
                'cancelled': '‚ùå'
            }.get(status, '‚ùì')
            
            response += f"{status_emoji} –ó–∞—è–≤–∫–∞ #{call_id}\n"
            response += f"üìÖ {created_at}\n"
            response += f"üêæ {pet_type} {pet_name or ''}\n"
            response += f"üìç {address[:50]}...\n"
            response += f"üìä –°—Ç–∞—Ç—É—Å: {status}\n\n"
        
        await update.message.reply_text(response)
    
    async def contact_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        contact_text = f"""
üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞:

üë®‚Äç‚öïÔ∏è –í—Ä–∞—á-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {VET_SERVICE_PHONE}
üìß Email: {os.getenv('VET_SERVICE_EMAIL', 'felinolog@vetservice.com')}

üïê –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ: 8:00-22:00
‚Ä¢ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã: –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ
‚Ä¢ –ü–ª–∞–Ω–æ–≤—ã–µ –æ—Å–º–æ—Ç—Ä—ã: 9:00-20:00

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥:
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤ –±–æ—Ç–µ: –±–µ—Å–ø–ª–∞—Ç–Ω–æ
‚Ä¢ –í—ã–µ–∑–¥ –Ω–∞ –¥–æ–º: –æ—Ç 2000 —Ä—É–±.
‚Ä¢ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤: –æ—Ç 3500 —Ä—É–±.
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Å–º–æ—Ç—Ä –∫–æ—à–∫–∏: –æ—Ç 1500 —Ä—É–±.

üéì –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: 15 –ª–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ –∫–æ—à–∫–∞—Ö
        """
        
        await update.message.reply_text(contact_text)
    
    async def button_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline –∫–Ω–æ–ø–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        if query.data == 'consultation':
            await self.start_consultation(query)
        elif query.data == 'help':
            await self.show_help(query)
        elif query.data == 'my_calls':
            await self.show_my_calls(query)
        elif query.data == 'contact':
            await self.show_contact(query)
    
    async def start_consultation(self, query):
        """–ù–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–æ–º"""
        consultation_text = """
ü©∫ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞

–ö–∞–∫ –≤—Ä–∞—á —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–∫–∞–º–∏, –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –º–Ω–µ –Ω—É–∂–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:

1Ô∏è‚É£ **–ü–æ—Ä–æ–¥–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç –∫–æ—à–∫–∏** (–≤–∞–∂–Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
2Ô∏è‚É£ **–í–µ—Å –∫–æ—à–∫–∏** (–¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ–∑–∏—Ä–æ–≤–æ–∫)
3Ô∏è‚É£ **–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–æ–≤**
4Ô∏è‚É£ **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã**
5Ô∏è‚É£ **–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏, –∞–ø–ø–µ—Ç–∏—Ç–µ**
6Ô∏è‚É£ **–ß—Ç–æ —É–∂–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–ª–∏ –¥–ª—è –ª–µ—á–µ–Ω–∏—è**
7Ô∏è‚É£ **–í–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç –ø–∞—Ä–∞–∑–∏—Ç–æ–≤**

–û–ø–∏—à–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–π –∫–æ—à–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.

‚ö†Ô∏è –ü–æ–º–Ω–∏—Ç–µ: –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –æ—á–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö!
        """
        
        keyboard = [[InlineKeyboardButton("üì± –í—ã–∑–≤–∞—Ç—å –Ω–∞ –¥–æ–º –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(consultation_text, reply_markup=reply_markup)
    
    async def show_help(self, query):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
        help_text = """
üÜò –ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–º-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–æ–º:

üîπ **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è** - –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∫–æ—à–∫–∏ –æ—Ç –≤—Ä–∞—á–∞ —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º
üîπ **–í—ã–∑–≤–∞—Ç—å –≤—Ä–∞—á–∞** - –∑–∞–∫–∞–∂–∏—Ç–µ –≤—ã–µ–∑–¥ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞ –Ω–∞ –¥–æ–º
üîπ **–ú–æ–∏ –∑–∞—è–≤–∫–∏** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –≤—ã–∑–æ–≤–æ–≤
üîπ **–ö–æ–Ω—Ç–∞–∫—Ç—ã** - –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—Ä–∞—á–∞

üéì **–ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:**
‚Ä¢ –í—Å–µ –ø–æ—Ä–æ–¥—ã –∫–æ—à–µ–∫ (–ø–µ—Ä—Å—ã, –±—Ä–∏—Ç–∞–Ω—Ü—ã, –º–µ–π–Ω-–∫—É–Ω—ã –∏ –¥—Ä.)
‚Ä¢ –ö–æ—Ç—è—Ç–∞ –æ—Ç —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ –≥–æ–¥–∞
‚Ä¢ –í–∑—Ä–æ—Å–ª—ã–µ –∏ –ø–æ–∂–∏–ª—ã–µ –∫–æ—à–∫–∏
‚Ä¢ –ò–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∫–æ—à–µ–∫
‚Ä¢ –ü–∞—Ä–∞–∑–∏—Ç–∞—Ä–Ω—ã–µ –∏–Ω–≤–∞–∑–∏–∏
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã –ñ–ö–¢ –∏ –º–æ—á–µ–ø–æ–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã

‚ö†Ô∏è –í —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é!

–†–∞–±–æ—Ç–∞—é 24/7 –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –≤–∞—à–∏—Ö –∫–æ—à–µ–∫.
        """
        await query.edit_message_text(help_text)
    
    async def show_my_calls(self, query):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = query.from_user.id
        calls = self.db.get_user_calls(user_id)
        
        if not calls:
            await query.edit_message_text("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞.")
            return
        
        response = "üìã –í–∞—à–∏ –∑–∞—è–≤–∫–∏ –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥—É:\n\n"
        
        for call in calls[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞—è–≤–∫–∏
            call_id, user_id, name, phone, address, pet_type, pet_name, pet_age, problem, urgency, preferred_time, comments, status, created_at = call
            
            status_emoji = {
                'pending': '‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
                'confirmed': '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –≤—Ä–∞—á–æ–º',
                'in_progress': 'üöó –í—Ä–∞—á –≤ –ø—É—Ç–∏',
                'completed': '‚úÖ –û—Å–º–æ—Ç—Ä –∑–∞–≤–µ—Ä—à–µ–Ω',
                'cancelled': '‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞'
            }.get(status, '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            
            response += f"#{call_id} - {status_emoji}\n"
            response += f"üêæ {pet_type}\n"
            response += f"üìÖ {created_at[:16]}\n\n"
        
        await query.edit_message_text(response)
    
    async def show_contact(self, query):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
        contact_text = f"""
üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞:

üë®‚Äç‚öïÔ∏è –í—Ä–∞—á-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ—à–∫–∞–º
üì± {VET_SERVICE_PHONE}
üìß {os.getenv('VET_SERVICE_EMAIL', 'felinolog@vetservice.com')}

üéì –°—Ç–∞–∂: 15 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–∫–∞–º–∏
üè• –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∏—è

üïê –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:
–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: 8:00-22:00
–í—ã–∑–æ–≤—ã: –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ
        """
        await query.edit_message_text(contact_text)
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
        user_message = update.message.text.lower()
        
        # –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        if any(word in user_message for word in ['–±–æ–ª–∏—Ç', '–±–æ–ª—å', '–ø–ª–æ—Ö–æ', '–±–æ–ª—å–Ω–æ–π', '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', '—Ä–≤–æ—Ç–∞', '–ø–æ–Ω–æ—Å', '–∫–∞—à–µ–ª—å']):
            response = self.get_professional_symptom_advice(user_message)
        elif any(word in user_message for word in ['–∫–æ—Ç–µ–Ω–æ–∫', '–º–∞–ª–µ–Ω—å–∫–∏–π', '–º–∞–ª—ã—à']):
            response = self.get_kitten_advice()
        elif any(word in user_message for word in ['–∫–æ—Ä–º–ª–µ–Ω–∏–µ', '–∫–æ—Ä–º', '–µ–¥–∞', '–ø–∏—Ç–∞–Ω–∏–µ']):
            response = self.get_cat_feeding_advice()
        elif any(word in user_message for word in ['–ø—Ä–∏–≤–∏–≤–∫–∞', '–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è', '–ø—Ä–∏–≤–∏–≤–∫–∏']):
            response = self.get_cat_vaccination_advice()
        elif any(word in user_message for word in ['–±—Ä–∏—Ç–∞–Ω–µ—Ü', '–ø–µ—Ä—Å', '–º–µ–π–Ω-–∫—É–Ω', '—Å—Ñ–∏–Ω–∫—Å', '–ø–æ—Ä–æ–¥–∞']):
            response = self.get_breed_specific_advice()
        else:
            response = self.get_professional_general_advice()
        
        keyboard = [[InlineKeyboardButton("üì± –í—ã–∑–≤–∞—Ç—å –Ω–∞ –¥–æ–º", web_app=WebAppInfo(url=WEBAPP_URL))]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(response, reply_markup=reply_markup)
    
    def get_professional_symptom_advice(self, message):
        """–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º —É –∫–æ—à–µ–∫"""
        return """
ü©∫ **–ê–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤ (–≤—Ä–∞—á-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥):**

–ù–∞ –æ—Å–Ω–æ–≤–µ 15-–ª–µ—Ç–Ω–µ–≥–æ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–∫–∞–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:

üîç **–ü–µ—Ä–≤–∏—á–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:**
‚Ä¢ –ò–∑–º–µ—Ä—å—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É (–Ω–æ—Ä–º–∞ 38-39¬∞C)
‚Ä¢ –û—Ü–µ–Ω–∏—Ç–µ –∞–ø–ø–µ—Ç–∏—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–∏–∑–∏—Å—Ç—ã–µ (—Ä–æ–∑–æ–≤—ã–µ = –Ω–æ—Ä–º–∞)
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥—ã—Ö–∞–Ω–∏–µ

‚ö†Ô∏è **–¢—Ä–µ–≤–æ–∂–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã —É –∫–æ—à–µ–∫:**
‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 39.5¬∞C –∏–ª–∏ –Ω–∏–∂–µ 37.5¬∞C
‚Ä¢ –û—Ç–∫–∞–∑ –æ—Ç –µ–¥—ã –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤
‚Ä¢ –ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ
‚Ä¢ –†–≤–æ—Ç–∞ –±–æ–ª–µ–µ 2 —Ä–∞–∑ –≤ –¥–µ–Ω—å
‚Ä¢ –ö—Ä–æ–≤—å –≤ –º–æ—á–µ –∏–ª–∏ –∫–∞–ª–µ

üíä **–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å:**
‚Ä¢ –û–±–µ—Å–ø–µ—á—å—Ç–µ –ø–æ–∫–æ–π –∏ —Ç–µ–ø–ª–æ
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–≤–µ–∂–µ–π –≤–æ–¥–µ
‚Ä¢ –ù–ï –¥–∞–≤–∞–π—Ç–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞!
‚Ä¢ –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –¥–∏–Ω–∞–º–∏–∫–æ–π

üö® **–°—Ä–æ—á–Ω–æ –≤—ã–∑—ã–≤–∞–π—Ç–µ –≤—Ä–∞—á–∞ –ø—Ä–∏ —É—Ö—É–¥—à–µ–Ω–∏–∏!**

–ù—É–∂–µ–Ω –æ—Å–º–æ—Ç—Ä –Ω–∞ –¥–æ–º—É –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞?
        """
    
    def get_kitten_advice(self):
        """–°–æ–≤–µ—Ç—ã –ø–æ –∫–æ—Ç—è—Ç–∞–º"""
        return """
üê± **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –∫–æ—Ç—è—Ç–∞–º (—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥):**

**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É—Ö–æ–¥–∞ –∑–∞ –∫–æ—Ç—è—Ç–∞–º–∏:**

üçº **–ö–æ—Ä–º–ª–µ–Ω–∏–µ:**
‚Ä¢ –î–æ 4 –Ω–µ–¥–µ–ª—å - —Ç–æ–ª—å–∫–æ –º–æ–ª–æ–∫–æ –º–∞—Ç–µ—Ä–∏
‚Ä¢ 4-8 –Ω–µ–¥–µ–ª—å - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∫–æ—Ä–º
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç—è—Ç –¥–æ –≥–æ–¥–∞
‚Ä¢ –ö–æ—Ä–º–ª–µ–Ω–∏–µ 4-6 —Ä–∞–∑ –≤ –¥–µ–Ω—å

üíâ **–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –∫–æ—Ç—è—Ç:**
‚Ä¢ –ü–µ—Ä–≤–∞—è –ø—Ä–∏–≤–∏–≤–∫–∞: 8-9 –Ω–µ–¥–µ–ª—å
‚Ä¢ –í—Ç–æ—Ä–∞—è –ø—Ä–∏–≤–∏–≤–∫–∞: 12 –Ω–µ–¥–µ–ª—å  
‚Ä¢ –†–µ–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è: –µ–∂–µ–≥–æ–¥–Ω–æ
‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç –±–µ—à–µ–Ω—Å—Ç–≤–∞

üè• **–ó–¥–æ—Ä–æ–≤—å–µ:**
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç –≥–ª–∏—Å—Ç–æ–≤ —Å 3 –Ω–µ–¥–µ–ª—å
‚Ä¢ –û—Å–º–æ—Ç—Ä –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞ –≤ 6-8 –Ω–µ–¥–µ–ª—å
‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è
‚Ä¢ –°–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å 3-14 –Ω–µ–¥–µ–ª—å

‚ö†Ô∏è **–¢—Ä–µ–≤–æ–∂–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:**
‚Ä¢ –û—Ç–∫–∞–∑ –æ—Ç –µ–¥—ã –±–æ–ª–µ–µ 12 —á–∞—Å–æ–≤
‚Ä¢ –í—è–ª–æ—Å—Ç—å, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Å–æ–Ω
‚Ä¢ –ü–æ–Ω–æ—Å –∏–ª–∏ —Ä–≤–æ—Ç–∞
‚Ä¢ –ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ

–ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –∫–æ—Ç–µ–Ω–∫—É?
        """
    
    def get_cat_feeding_advice(self):
        """–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∫–æ—Ä–º–ª–µ–Ω–∏—é –∫–æ—à–µ–∫"""
        return """
üçΩÔ∏è **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∫–æ—à–µ–∫ (—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥):**

**–û—Å–Ω–æ–≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è:**

‚úÖ **–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º:**
‚Ä¢ –ü—Ä–µ–º–∏—É–º –∏–ª–∏ —Å—É–ø–µ—Ä-–ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å
‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–æ–∑—Ä–∞—Å—Ç—É (–∫–æ—Ç–µ–Ω–æ–∫/–≤–∑—Ä–æ—Å–ª–∞—è/–ø–æ–∂–∏–ª–∞—è)
‚Ä¢ –£—á–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –ø–æ—Ä–æ–¥—ã
‚Ä¢ –ë–∞–ª–∞–Ω—Å –±–µ–ª–∫–æ–≤, –∂–∏—Ä–æ–≤, —É–≥–ª–µ–≤–æ–¥–æ–≤

üìä **–†–µ–∂–∏–º –∫–æ—Ä–º–ª–µ–Ω–∏—è:**
‚Ä¢ –ö–æ—Ç—è—Ç–∞: 4-6 —Ä–∞–∑ –≤ –¥–µ–Ω—å
‚Ä¢ –í–∑—Ä–æ—Å–ª—ã–µ –∫–æ—à–∫–∏: 2-3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
‚Ä¢ –ü–æ–∂–∏–ª—ã–µ: 2-3 —Ä–∞–∑–∞, –º–µ–Ω—å—à–∏–º–∏ –ø–æ—Ä—Ü–∏—è–º–∏
‚Ä¢ –í—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∞—è –≤–æ–¥–∞ –≤ –¥–æ—Å—Ç—É–ø–µ

‚ùå **–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:**
‚Ä¢ –®–æ–∫–æ–ª–∞–¥, –ª—É–∫, —á–µ—Å–Ω–æ–∫
‚Ä¢ –í–∏–Ω–æ–≥—Ä–∞–¥, –∏–∑—é–º
‚Ä¢ –ö–æ—Å—Ç–∏ –ø—Ç–∏—Ü—ã
‚Ä¢ –ú–æ–ª–æ–∫–æ –≤–∑—Ä–æ—Å–ª—ã–º –∫–æ—à–∫–∞–º
‚Ä¢ –ñ–∏—Ä–Ω–∞—è, —Å–æ–ª–µ–Ω–∞—è –ø–∏—â–∞

üéØ **–ü–æ—Ä–æ–¥–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–µ—Ä—Å—ã: —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –ú–ö–ë
‚Ä¢ –ë—Ä–∏—Ç–∞–Ω—Ü—ã: –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞
‚Ä¢ –ú–µ–π–Ω-–∫—É–Ω—ã: –∫—Ä—É–ø–Ω—ã–µ –ø–æ—Ä—Ü–∏–∏
‚Ä¢ –°—Ñ–∏–Ω–∫—Å—ã: –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º

–ù—É–∂–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –¥–∏–µ—Ç–∞ –¥–ª—è –≤–∞—à–µ–π –∫–æ—à–∫–∏?
        """
    
    def get_cat_vaccination_advice(self):
        """–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏ –∫–æ—à–µ–∫"""
        return """
üíâ **–ì—Ä–∞—Ñ–∏–∫ –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏ –∫–æ—à–µ–∫ (—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥):**

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–≤–∏–≤–∫–∏:**

üìÖ **–ö–æ—Ç—è—Ç–∞:**
‚Ä¢ 8-9 –Ω–µ–¥–µ–ª—å: –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –≤–∞–∫—Ü–∏–Ω–∞
‚Ä¢ 12 –Ω–µ–¥–µ–ª—å: —Ä–µ–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è + –±–µ—à–µ–Ω—Å—Ç–≤–æ
‚Ä¢ 1 –≥–æ–¥: —Ä–µ–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–∏–≤–∏–≤–æ–∫

üîÑ **–í–∑—Ä–æ—Å–ª—ã–µ –∫–æ—à–∫–∏:**
‚Ä¢ –ï–∂–µ–≥–æ–¥–Ω–∞—è —Ä–µ–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è
‚Ä¢ –ë–µ—à–µ–Ω—Å—Ç–≤–æ - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ –∑–∞–∫–æ–Ω—É
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å: –ø–∞–Ω–ª–µ–π–∫–æ–ø–µ–Ω–∏—è, —Ä–∏–Ω–æ—Ç—Ä–∞—Ö–µ–∏—Ç, –∫–∞–ª–∏—Ü–∏–≤–∏—Ä–æ–∑

üõ°Ô∏è **–ó–∞—â–∏—Ç–∞ –æ—Ç –±–æ–ª–µ–∑–Ω–µ–π:**
‚Ä¢ –ü–∞–Ω–ª–µ–π–∫–æ–ø–µ–Ω–∏—è (–∫–æ—à–∞—á—å—è —á—É–º–∞)
‚Ä¢ –†–∏–Ω–æ—Ç—Ä–∞—Ö–µ–∏—Ç (–≥–µ—Ä–ø–µ—Å)
‚Ä¢ –ö–∞–ª–∏—Ü–∏–≤–∏—Ä–æ–∑
‚Ä¢ –•–ª–∞–º–∏–¥–∏–æ–∑
‚Ä¢ –ë–µ—à–µ–Ω—Å—Ç–≤–æ

‚ö†Ô∏è **–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è:**
‚Ä¢ –ë–æ–ª–µ–∑–Ω—å –∫–æ—à–∫–∏
‚Ä¢ –ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å
‚Ä¢ –ù–µ–¥–∞–≤–Ω–∏–π —Å—Ç—Ä–µ—Å—Å
‚Ä¢ –ü—Ä–∏–µ–º –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–æ–≤

üìã **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏:**
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç –≥–ª–∏—Å—Ç–æ–≤ –∑–∞ 10-14 –¥–Ω–µ–π
‚Ä¢ –û—Å–º–æ—Ç—Ä –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞
‚Ä¢ –ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–∏–º–ø—Ç–æ–º–æ–≤ –±–æ–ª–µ–∑–Ω–∏

–°–æ—Å—Ç–∞–≤–ª—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è –≤–∞—à–µ–π –∫–æ—à–∫–∏!
        """
    
    def get_breed_specific_advice(self):
        """–°–æ–≤–µ—Ç—ã –ø–æ –ø–æ—Ä–æ–¥–Ω—ã–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º"""
        return """
üêæ **–ü–æ—Ä–æ–¥–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ—à–µ–∫ (—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥):**

**–°–ø–µ—Ü–∏—Ñ–∏–∫–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ä–æ–¥:**

üá¨üáß **–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–µ –∫–æ—à–∫–∏:**
‚Ä¢ –°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –æ–∂–∏—Ä–µ–Ω–∏—é
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–¥—Ü–µ–º (HCM)
‚Ä¢ –û—Å–æ–±—ã–π —É—Ö–æ–¥ –∑–∞ —à–µ—Ä—Å—Ç—å—é
‚Ä¢ –°–ø–æ–∫–æ–π–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä

üáÆüá∑ **–ü–µ—Ä—Å–∏–¥—Å–∫–∏–µ –∫–æ—à–∫–∏:**
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —É—Ö–æ–¥ –∑–∞ —à–µ—Ä—Å—Ç—å—é
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –¥—ã—Ö–∞–Ω–∏–µ–º
‚Ä¢ –°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –ú–ö–ë
‚Ä¢ –£—Ö–æ–¥ –∑–∞ –≥–ª–∞–∑–∞–º–∏

ü¶Å **–ú–µ–π–Ω-–∫—É–Ω—ã:**
‚Ä¢ –ö—Ä—É–ø–Ω—ã–π —Ä–∞–∑–º–µ—Ä - –æ—Å–æ–±–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
‚Ä¢ –°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ HCM
‚Ä¢ –î–∏—Å–ø–ª–∞–∑–∏—è —Ç–∞–∑–æ–±–µ–¥—Ä–µ–Ω–Ω—ã—Ö —Å—É—Å—Ç–∞–≤–æ–≤
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏

üè∫ **–°—Ñ–∏–Ω–∫—Å—ã:**
‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–æ–ª–Ω—Ü–∞ –∏ —Ö–æ–ª–æ–¥–∞
‚Ä¢ –û—Å–æ–±—ã–π —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –∞–ø–ø–µ—Ç–∏—Ç
‚Ä¢ –°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –∫–æ–∂–Ω—ã–º –ø—Ä–æ–±–ª–µ–º–∞–º

üéØ **–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥:**
–ö–∞–∂–¥–∞—è –ø–æ—Ä–æ–¥–∞ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ —É—Ö–æ–¥–∞, –ø–∏—Ç–∞–Ω–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø–æ—Ä–æ–¥–µ –≤–∞—à–µ–π –∫–æ—à–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π!
        """
    
    def get_professional_general_advice(self):
        """–û–±—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã"""
        return """
ü©∫ **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞:**

–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –ö–∞–∫ –≤—Ä–∞—á —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–∫–∞–º–∏, –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –º–Ω–µ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:

üìã **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–∫–µ:**
‚Ä¢ –ü–æ—Ä–æ–¥–∞, –≤–æ–∑—Ä–∞—Å—Ç, –≤–µ—Å
‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏/–∞–ø–ø–µ—Ç–∏—Ç–µ
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–π
‚Ä¢ –ß—Ç–æ —É–∂–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–ª–∏

üéØ **–ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:**
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫–æ—à–µ–∫
‚Ä¢ –ü–æ—Ä–æ–¥–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≥–µ–Ω–µ—Ç–∏–∫–∞
‚Ä¢ –ò–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –±–æ–ª–µ–∑–Ω–∏ –∫–æ—à–µ–∫
‚Ä¢ –ü–∞—Ä–∞–∑–∏—Ç–æ–ª–æ–≥–∏—è
‚Ä¢ –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è –∫–æ—à–µ–∫
‚Ä¢ –ì–µ—Ä–∏–∞—Ç—Ä–∏—è (–ø–æ–∂–∏–ª—ã–µ –∫–æ—à–∫–∏)

üí° **–ü–æ–º–Ω–∏—Ç–µ:** –û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –Ω–æ —Ç–æ—á–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑ —Ç—Ä–µ–±—É–µ—Ç –æ—á–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞.

–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–π –∫–æ—à–∫–∏, –∏ —è –¥–∞–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!
        """
    
    async def web_app_data(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            data = json.loads(update.effective_message.web_app_data.data)
            data['user_id'] = update.effective_user.id
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            call_id = self.db.save_vet_call(data)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            response = f"""
‚úÖ **–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞ –ø—Ä–∏–Ω—è—Ç–∞!**

üìã **–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:** #{call_id}
üë§ **–í–ª–∞–¥–µ–ª–µ—Ü:** {data.get('name')}
üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** {data.get('phone')}
üìç **–ê–¥—Ä–µ—Å:** {data.get('address')}
üêæ **–ü–∏—Ç–æ–º–µ—Ü:** {data.get('petType')} {data.get('petName', '')}
üéÇ **–í–æ–∑—Ä–∞—Å—Ç:** {data.get('petAge')}
üö® **–ü—Ä–æ–±–ª–µ–º–∞:** {data.get('problem')}
‚è∞ **–ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è:** {data.get('preferredTime', '–õ—é–±–æ–µ')}

–í—Ä–∞—á-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–∑–∏—Ç–∞.

üìû **–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–≤—è–∑—å:** {VET_SERVICE_PHONE}
            """
            
            await update.effective_message.reply_text(response)
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            if ADMIN_CHAT_ID:
                admin_message = f"""
üö® **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–∑–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞**

üìã **ID:** #{call_id}
üë§ **–ö–ª–∏–µ–Ω—Ç:** {data.get('name')} (@{update.effective_user.username or '–±–µ–∑ username'})
üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** {data.get('phone')}
üìç **–ê–¥—Ä–µ—Å:** {data.get('address')}
üêæ **–ö–æ—à–∫–∞:** {data.get('petName', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} ({data.get('petAge')})
üö® **–ü—Ä–æ–±–ª–µ–º–∞:** {data.get('problem')}
‚ö†Ô∏è **–°—Ä–æ—á–Ω–æ—Å—Ç—å:** {data.get('urgency', '–û–±—ã—á–Ω–∞—è')}
‚è∞ **–í—Ä–µ–º—è:** {data.get('preferredTime', '–õ—é–±–æ–µ')}
üí¨ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:** {data.get('comments', '–ù–µ—Ç')}

üìÖ **–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:** {datetime.now().strftime('%d.%m.%Y %H:%M')}
                """
                
                try:
                    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=admin_message)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
            
            logger.info(f"–ó–∞—è–≤–∫–∞ #{call_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
            
        except json.JSONDecodeError:
            await update.effective_message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
            await update.effective_message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ –±–æ—Ç–∞-—Ñ–µ–ª–∏–Ω–æ–ª–æ–≥–∞...")
        try:
            self.application.run_polling(drop_pending_updates=True)
        except KeyboardInterrupt:
            logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        bot = ProfessionalVetBot()
        bot.run()
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ .env —Ñ–∞–π–ª–µ")

if __name__ == "__main__":
    main()

