"""
–¢–µ—Å—Ç DeepSeek API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""

import requests
import json

def test_deepseek_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DeepSeek API"""
    
    api_key = "sk-6c32104420624e3483ef173804d8abde"
    base_url = "https://api.deepseek.com/v1"
    
    headers = {
        'Authorization': f'Bearer {api_key}',
        'Content-Type': 'application/json'
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    data = {
        'model': 'deepseek-chat',
        'messages': [
            {
                'role': 'user', 
                'content': '–ü—Ä–∏–≤–µ—Ç! –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?'
            }
        ],
        'temperature': 0.7,
        'max_tokens': 100
    }
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DeepSeek API...")
    print(f"URL: {base_url}/chat/completions")
    print(f"Model: {data['model']}")
    
    try:
        response = requests.post(
            f'{base_url}/chat/completions',
            headers=headers,
            json=data,
            timeout=30
        )
        
        print(f"Status Code: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ DeepSeek API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"–û—Ç–≤–µ—Ç: {result['choices'][0]['message']['content']}")
            print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {result.get('usage', {})}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_veterinary_prompt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
    
    api_key = "sk-6c32104420624e3483ef173804d8abde"
    base_url = "https://api.deepseek.com/v1"
    
    headers = {
        'Authorization': f'Bearer {api_key}',
        'Content-Type': 'application/json'
    }
    
    # –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    system_prompt = """–¢—ã –æ–ø—ã—Ç–Ω—ã–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. 
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞ –ª–µ—á–µ–Ω–∏–∏ –∫–æ—à–µ–∫. –û–±—â–∞–µ—à—å—Å—è –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –≤—Ä–∞—á - —É–≤–µ—Ä–µ–Ω–Ω–æ, 
–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, —Å—Ç–∞–≤–∏—à—å –¥–∏–∞–≥–Ω–æ–∑—ã –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—à—å –ª–µ—á–µ–Ω–∏–µ. 

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ—á–µ–Ω–∏—é.
–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é, –Ω–æ –æ–±—ä—è—Å–Ω—è–π –ø–æ–Ω—è—Ç–Ω–æ."""
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π
    user_message = "–£ –∫–æ—à–∫–∏ 3 –≥–æ–¥–∞ –ø–æ–Ω–æ—Å —É–∂–µ 2 –¥–Ω—è, —Å—Ç–∞–ª–∞ –≤—è–ª–æ–π, –ø–ª–æ—Ö–æ –µ—Å—Ç"
    
    data = {
        'model': 'deepseek-chat',
        'messages': [
            {'role': 'system', 'content': system_prompt},
            {'role': 'user', 'content': f'–ü–∞—Ü–∏–µ–Ω—Ç: –∫–æ—à–∫–∞. –ñ–∞–ª–æ–±—ã: {user_message}'}
        ],
        'temperature': 0.8,
        'max_tokens': 500
    }
    
    print("\nüê± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞...")
    print(f"–ó–∞–ø—Ä–æ—Å: {user_message}")
    
    try:
        response = requests.post(
            f'{base_url}/chat/completions',
            headers=headers,
            json=data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            vet_response = result['choices'][0]['message']['content']
            print("‚úÖ –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
            print(f"–û—Ç–≤–µ—Ç –≤—Ä–∞—á–∞:\n{vet_response}")
            print(f"\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {result.get('usage', {})}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DeepSeek API –¥–ª—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ –±–æ—Ç–∞\n")
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    basic_test = test_deepseek_api()
    
    # –¢–µ—Å—Ç 2: –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    if basic_test:
        vet_test = test_veterinary_prompt()
        
        if vet_test:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! DeepSeek API –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ.")
        else:
            print("\n‚ö†Ô∏è –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º.")
    else:
        print("\n‚ùå –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.")

