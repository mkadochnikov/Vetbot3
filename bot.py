"""
–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π Telegram-–±–æ—Ç —Å DeepSeek API
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv
import requests
import json
from typing import Optional

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class VeterinaryBot:
    """–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç —Å DeepSeek API"""
    
    def __init__(self):
        # API –∫–ª—é—á–∏
        self.telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
        self.deepseek_key = os.getenv('DEEPSEEK_API_KEY')
        
        if not self.telegram_token:
            raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        if not self.deepseek_key:
            raise ValueError("‚ùå DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ DeepSeek
        self.deepseek_url = "https://api.deepseek.com/v1/chat/completions"
        self.model = os.getenv('DEEPSEEK_MODEL', 'deepseek-chat')
        self.max_tokens = int(os.getenv('MAX_TOKENS', '1500'))
        self.temperature = float(os.getenv('TEMPERATURE', '0.8'))
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        self.system_prompt = """–¢—ã –æ–ø—ã—Ç–Ω—ã–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã –≤ –∫–ª–∏–Ω–∏–∫–µ. 
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞ –ª–µ—á–µ–Ω–∏–∏ –¥–æ–º–∞—à–Ω–∏—Ö –∫–æ—à–µ–∫ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥ –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.

–¢–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –≤–ª–∞–¥–µ–ª—å—Ü–∞–º
- –£–≤–µ—Ä–µ–Ω–Ω—ã–π –≤ –¥–∏–∞–≥–Ω–æ–∑–∞—Ö –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏

–ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å –æ–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã
2. –°—Ç–∞–≤–∏—à—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑
3. –ù–∞–∑–Ω–∞—á–∞–µ—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ
4. –î–∞–µ—à—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É
5. –£–∫–∞–∑—ã–≤–∞–µ—à—å –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –∫ –≤—Ä–∞—á—É

–í—Å–µ–≥–¥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç:
üîç –î–∏–∞–≥–Ω–æ–∑: [–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è]
üíä –õ–µ—á–µ–Ω–∏–µ: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ –¥–æ–∑–∏—Ä–æ–≤–∫–∏]
üè† –£—Ö–æ–¥: [—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É —É—Ö–æ–¥—É]
‚ö†Ô∏è –ö–æ–≥–¥–∞ –∫ –≤—Ä–∞—á—É: [–∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è]

–ü–æ–º–Ω–∏: —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≤—Ä–∞—á, –≤–ª–∞–¥–µ–ª—å—Ü—ã –¥–æ–≤–µ—Ä—è—é—Ç —Ç–≤–æ–µ–º—É –º–Ω–µ–Ω–∏—é."""
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.app = Application.builder().token(self.telegram_token).build()
        self._setup_handlers()
        
        logger.info("‚úÖ –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    
    def _setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(CommandHandler("info", self.info_command))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    def get_deepseek_response(self, user_message: str) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek API"""
        headers = {
            'Authorization': f'Bearer {self.deepseek_key}',
            'Content-Type': 'application/json'
        }
        
        data = {
            'model': self.model,
            'messages': [
                {'role': 'system', 'content': self.system_prompt},
                {'role': 'user', 'content': f'–ü–∞—Ü–∏–µ–Ω—Ç: –∫–æ—à–∫–∞. –ñ–∞–ª–æ–±—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞: {user_message}'}
            ],
            'max_tokens': self.max_tokens,
            'temperature': self.temperature
        }
        
        try:
            response = requests.post(self.deepseek_url, headers=headers, json=data, timeout=30)
            
            if response.status_code == 200:
                result = response.json()
                return result['choices'][0]['message']['content']
            elif response.status_code == 402:
                logger.error("DeepSeek API: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ")
                return "üí∞ –ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å DeepSeek API."
            elif response.status_code == 401:
                logger.error("DeepSeek API: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
                return "üîë –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á DeepSeek."
            else:
                logger.error(f"DeepSeek API Error: {response.status_code} - {response.text}")
                return "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
                
        except requests.exceptions.Timeout:
            logger.error("DeepSeek API: –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
            return "‚è∞ –ò–∑–≤–∏–Ω–∏—Ç–µ, –∑–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        except requests.exceptions.ConnectionError:
            logger.error("DeepSeek API: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            return "üåê –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç."
        except Exception as e:
            logger.error(f"DeepSeek API: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - {e}")
            return "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        welcome_message = """üê± **–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç DeepSeek**

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.
–ü–æ–º–æ–≥—É —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –ª–µ—á–µ–Ω–∏–µ–º –≤–∞—à–µ–π –∫–æ—à–∫–∏.

**–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:**
–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç –∫–æ—à–∫—É:
‚Ä¢ –°–∏–º–ø—Ç–æ–º—ã –∏ –∏—Ö –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç –∏ –ø–æ—Ä–æ–¥–∞ –∫–æ—à–∫–∏  
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏/–∞–ø–ø–µ—Ç–∏—Ç–µ
‚Ä¢ –ö–æ–≥–¥–∞ –Ω–∞—á–∞–ª–∞—Å—å –ø—Ä–æ–±–ª–µ–º–∞

**–ü—Ä–∏–º–µ—Ä:** "–ö–æ—à–∫–∞ 5 –ª–µ—Ç, –±—Ä–∏—Ç–∞–Ω–∫–∞, 3 –¥–Ω—è –ø–æ–Ω–æ—Å, —Å—Ç–∞–ª–∞ –≤—è–ª–∞—è, –ø–ª–æ—Ö–æ –µ—Å—Ç"

–ì–æ—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–∏–∞–≥–Ω–æ–∑ –∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ! üë®‚Äç‚öïÔ∏è"""
        
        await update.message.reply_text(welcome_message, parse_mode='Markdown')
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        help_text = """üÜò **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

**–ö–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:**
–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å –∫–æ—à–∫–æ–π –æ–±—ã—á–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.

**–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–ö–æ—Ç 2 –≥–æ–¥–∞, –∫–∞—à–ª—è–µ—Ç –Ω–µ–¥–µ–ª—é, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 39.5"
‚Ä¢ "–ö–æ—Ç–µ–Ω–æ–∫ 4 –º–µ—Å—è—Ü–∞, –ø–æ–Ω–æ—Å —Å –∫—Ä–æ–≤—å—é, –Ω–µ –∏–≥—Ä–∞–µ—Ç"
‚Ä¢ "–ö–æ—à–∫–∞ 8 –ª–µ—Ç, —Ö—Ä–æ–º–∞–µ—Ç –Ω–∞ –∑–∞–¥–Ω—é—é –ª–∞–ø—É, –º—è—É–∫–∞–µ—Ç"

**–ß—Ç–æ —É–∫–∞–∑–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:**
‚úÖ –í–æ–∑—Ä–∞—Å—Ç –∫–æ—à–∫–∏
‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã
‚úÖ –ö–∞–∫ –¥–æ–ª–≥–æ –¥–ª–∏—Ç—Å—è –ø—Ä–æ–±–ª–µ–º–∞
‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏

–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—à–µ—Ç–µ - —Ç–µ–º —Ç–æ—á–Ω–µ–µ –¥–∏–∞–≥–Ω–æ–∑! üéØ"""
        
        await update.message.reply_text(help_text, parse_mode='Markdown')
    
    async def info_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /info"""
        info_text = """‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ**

**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
ü§ñ Telegram Bot API
üß† DeepSeek AI (deepseek-chat)
üêç Python 3.11

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫–æ—à–µ–∫
‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ª–µ—á–µ–Ω–∏—è
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –≤—Ä–∞—á—É

**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
**–í–µ—Ä—Å–∏—è:** 1.0 (DeepSeek)"""
        
        await update.message.reply_text(info_text, parse_mode='Markdown')
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_text = update.message.text
        user_id = update.effective_user.id
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {user_text[:50]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
        status_message = await update.message.reply_text(
            "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∏–º–ø—Ç–æ–º—ã... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
        )
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek
            response = self.get_deepseek_response(user_text)
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await status_message.delete()
            await update.message.reply_text(response)
            logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user_id}: {e}")
            await status_message.edit_text(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É."
            )
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ –±–æ—Ç–∞ —Å DeepSeek API...")
        try:
            self.app.run_polling(drop_pending_updates=True)
        except KeyboardInterrupt:
            logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        bot = VeterinaryBot()
        bot.run()
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ .env —Ñ–∞–π–ª–µ")

if __name__ == "__main__":
    main()

